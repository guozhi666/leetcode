/**
*一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为“Start” ）。

*机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为“Finish”）。

*现在考虑网格中有障碍物。那么从左上角到右下角将会有多少条不同的路径？

*示例 1:

*输入:
*[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
*输出: 2
*解释:
*3x3 网格的正中间有一个障碍物。
*从左上角到右下角一共有 2 条不同的路径：
*1. 向右 -> 向右 -> 向下 -> 向下
*2. 向下 -> 向下 -> 向右 -> 向右
*/



class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        int length_max=(int)obstacleGrid.size();
        if(length_max==0)
            return 0;
        int length_min=(int)obstacleGrid[0].size();
        if(length_min==0)
            return 0;
        vector<int> res_vec(length_min,0);
        if(obstacleGrid[0][0]==1)
            return 0;
        res_vec[0]=1;
        for(int i=1;i<length_min;i++)
            if(res_vec[i-1]!=0&&obstacleGrid[0][i]==0)
                res_vec[i]=1;
        for(int i=1;i<length_max;i++){
            if(res_vec[0]!=0&&obstacleGrid[i][0]==0)
                res_vec[0]=1;
            else
                res_vec[0]=0;
            for(int j=1;j<length_min;j++){
                if(obstacleGrid[i][j]==1)
                    res_vec[j]=0;
                else
                    res_vec[j]+=res_vec[j-1];
            }
        }
        return res_vec[length_min-1];
    }
};
