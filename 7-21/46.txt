#给定一个没有重复数字的序列，返回其所有可能的全排列。

#示例:

#输入: [1,2,3]
#输出:
#[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
 ]



import copy
res = []
class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        res.clear()
        if len(nums) == 0:
            return []
        if len(nums) == 1:
            return [nums]
        for i in range(len(nums)):
            self.permuteHelper([nums[i]], nums[0:i] + nums[i + 1:])
        return res
 
    def permuteHelper(self, before, nums):
        now = copy.copy(before)
        if len(nums) == 1:
            now.append(nums[0])
            res.append(now)
        else:
            for i in range(len(nums)):
                now.append(nums[i])
                self.permuteHelper(now, nums[0:i] + nums[i + 1:])
                now.remove(nums[i])